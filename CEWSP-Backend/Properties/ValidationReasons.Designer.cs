//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CEWSP_Backend.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class ValidationReasons {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ValidationReasons() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CEWSP_Backend.Properties.ValidationReasons", typeof(ValidationReasons).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided executable does not appear to be a Sandbox editor executable.
        /// </summary>
        public static string CEEditorPathIsNotEditorExe {
            get {
                return ResourceManager.GetString("CEEditorPathIsNotEditorExe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot check game folder for validity as the CE root folder is not valid.
        /// </summary>
        public static string CEGameCannotCheckRootInvalid {
            get {
                return ResourceManager.GetString("CEGameCannotCheckRootInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please specify a game folder names.
        /// </summary>
        public static string CEGameNameIsEmpty {
            get {
                return ResourceManager.GetString("CEGameNameIsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified name seems to be a path, please only specify a name..
        /// </summary>
        public static string CEGameNameIsPath {
            get {
                return ResourceManager.GetString("CEGameNameIsPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified folder does not exist, it will be created.
        /// </summary>
        public static string CEGameNotExist {
            get {
                return ResourceManager.GetString("CEGameNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified path is missing at least one expected folder.
        /// </summary>
        public static string CERootIsMissingFolders {
            get {
                return ResourceManager.GetString("CERootIsMissingFolders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your input is valid.
        /// </summary>
        public static string CommonEverythingGood {
            get {
                return ResourceManager.GetString("CommonEverythingGood", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are issues with your input.
        /// </summary>
        public static string CommonThereAreIssues {
            get {
                return ResourceManager.GetString("CommonThereAreIssues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified path contains non latin characters.
        /// </summary>
        public static string PathContainsNonLatinCharacters {
            get {
                return ResourceManager.GetString("PathContainsNonLatinCharacters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified path contains spaces, which is not ideal when working with CRYENGINE..
        /// </summary>
        public static string PathContainsSpaces {
            get {
                return ResourceManager.GetString("PathContainsSpaces", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified path does not exist..
        /// </summary>
        public static string PathDoesNotExist {
            get {
                return ResourceManager.GetString("PathDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please choose a unique name for this project.
        /// </summary>
        public static string ProjectNameEmpty {
            get {
                return ResourceManager.GetString("ProjectNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The chosen project name already exists, please choose a different one..
        /// </summary>
        public static string ProjectNameExists {
            get {
                return ResourceManager.GetString("ProjectNameExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifiy a valid CE root installation folder.
        /// </summary>
        public static string SolCEGameCannotCheckRootInvalid {
            get {
                return ResourceManager.GetString("SolCEGameCannotCheckRootInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make sure you spelled the name correctly.
        /// </summary>
        public static string SolCEGameNotExist {
            get {
                return ResourceManager.GetString("SolCEGameNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please choose a valid CE installation directory..
        /// </summary>
        public static string SolCERootIsMissingFolders {
            get {
                return ResourceManager.GetString("SolCERootIsMissingFolders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The game folder must reside inside the CE root, so a name is enough.
        /// </summary>
        public static string SolGameNameIsPath {
            get {
                return ResourceManager.GetString("SolGameNameIsPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make sure to only use letters from a to z and numbers from 0 to 9.
        /// </summary>
        public static string SolPathContainsNonLatinCharacters {
            get {
                return ResourceManager.GetString("SolPathContainsNonLatinCharacters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose another path or replace spaces with other characters such as &apos;-&apos; or &apos;_
        ///&apos;.
        /// </summary>
        public static string SolPathContainsSpaces {
            get {
                return ResourceManager.GetString("SolPathContainsSpaces", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose a valid path.
        /// </summary>
        public static string SolPathDoesNotExistChooseValid {
            get {
                return ResourceManager.GetString("SolPathDoesNotExistChooseValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create the desired path.
        /// </summary>
        public static string SolPathDoesNotExistCreate {
            get {
                return ResourceManager.GetString("SolPathDoesNotExistCreate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The game folder is not empty thus the game template may override existing files and directories when being installed..
        /// </summary>
        public static string TemplateMightOverride {
            get {
                return ResourceManager.GetString("TemplateMightOverride", resourceCulture);
            }
        }
    }
}
